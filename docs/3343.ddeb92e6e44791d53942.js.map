{"version":3,"file":"3343.ddeb92e6e44791d53942.js","mappings":"mXAIoMA,eAAeC,EAAEC,EAAED,EAAEE,GAAG,MAAMC,GAAE,QAAEF,GAAGG,EAAEJ,EAAEK,SAASL,EAAEM,gBAAgBF,EAAEE,cAAcC,KAAKC,UAAUR,EAAEM,gBAAgB,MAAMG,EAAE,IAAIL,EAAEM,aAAY,EAAGC,EAAE,QAAQC,GAAE,QAAE,IAAIT,EAAEU,SAASJ,IAAIE,GAAE,QAAEC,EAAE,IAAIV,EAAEY,OAAO,SAASC,EAAE,GAAGZ,EAAEa,gCAAgCC,KAAKC,SAAS,OAAEH,EAAEJ,GAAG,OAAO,IAAEQ,SAASC,EAAEF,GAAG,CAACnB,eAAeG,EAAEmB,EAAErB,EAAEE,GAAG,IAAIF,EAAEsB,WAAW,MAAM,IAAI,IAAE,2DAA2D,sBAAsB,MAAMF,GAAE,QAAEC,GAAGlB,EAAEH,EAAEK,SAASL,EAAEM,gBAAgBH,EAAEG,cAAcC,KAAKC,UAAUR,EAAEM,gBAAgB,MAAMF,GAAE,QAAEgB,EAAEP,MAAM,CAACA,OAAM,QAAE,IAAIV,EAAEO,aAAY,EAAGX,OAAM,EAAGY,EAAE,YAAYT,EAAEY,OAAO,SAASL,EAAE,GAAGW,EAAEJ,gCAAgCC,KAAKL,SAAS,OAAEH,EAAEL,GAAG,OAAOQ,EAAEA,EAAEW,UAAU,IAAI,CAAC,SAASH,EAAEI,GAAG,OAAOA,EAAEC,eAAeD,EAAEC,aAAaD,EAAEC,aAAaC,KAAKF,IAAIA,EAAEG,eAAeC,mBAAmBJ,EAAEG,eAAeC,iBAAiB,CAACC,KAAKL,EAAEG,eAAeC,iBAAiBC,KAAKC,IAAIN,EAAEG,eAAeC,iBAAiBE,IAAIC,KAAKP,EAAEG,eAAeC,iBAAiBG,KAAKC,WAAWR,EAAEG,eAAeC,iBAAiBI,WAAWC,cAAcT,EAAEG,eAAeC,iBAAiBK,cAAcC,QAAQV,EAAEG,eAAeC,iBAAiBM,UAAY,CAACC,QAAQX,EAAEY,GAAGT,eAAeH,EAAEG,oBAAoBH,CAAC,C","sources":["webpack://react-redux-arcgis-boilerplate/./node_modules/@arcgis/core/rest/networks/validateNetworkTopology.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport e from\"../../request.js\";import t from\"../../core/Error.js\";import{parseUrl as i,encode as a,asValidOptions as s}from\"../utils.js\";import r from\"./support/ValidateNetworkTopologyResult.js\";async function o(t,o,d){const l=i(t),u=o.toJSON();o.validationSet&&(u.validationSet=JSON.stringify(o.validationSet));const c={...u,returnEdits:!0,f:\"json\"},p=a({...l.query,...c}),f=s(p,{...d,method:\"post\"}),k=`${l.path}/validateNetworkTopology`,{data:v}=await e(k,f);return r.fromJSON(n(v))}async function d(r,o,d){if(!o.gdbVersion)throw new t(\"submit-validate-network-topology-job:missing-gdb-version\",\"version is missing\");const n=i(r),l=o.toJSON();o.validationSet&&(l.validationSet=JSON.stringify(o.validationSet));const u=s(n.query,{query:a({...l,returnEdits:!0,async:!0,f:\"json\"}),...d,method:\"post\"}),c=`${n.path}/validateNetworkTopology`,{data:p}=await e(c,u);return p?p.statusUrl:null}function n(e){return e.serviceEdits&&(e.serviceEdits=e.serviceEdits.map((e=>(e.editedFeatures.spatialReference&&(e.editedFeatures.spatialReference={wkid:e.editedFeatures.spatialReference.wkid,wkt:e.editedFeatures.spatialReference.wkt,wkt2:e.editedFeatures.spatialReference.wkt2,latestWkid:e.editedFeatures.spatialReference.latestWkid,latestVcsWkid:e.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:e.editedFeatures.spatialReference.vcsWkid}),e={layerId:e.id,editedFeatures:e.editedFeatures})))),e}export{n as handleValidateNetworkTopologyResult,d as submitValidateNetworkTopologyJob,o as validateNetworkTopology};\n"],"names":["async","o","t","d","l","u","toJSON","validationSet","JSON","stringify","c","returnEdits","f","p","query","method","k","path","data","v","fromJSON","n","r","gdbVersion","statusUrl","e","serviceEdits","map","editedFeatures","spatialReference","wkid","wkt","wkt2","latestWkid","latestVcsWkid","vcsWkid","layerId","id"],"sourceRoot":""}