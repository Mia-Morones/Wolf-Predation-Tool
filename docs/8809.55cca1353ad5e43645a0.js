"use strict";(self.webpackChunkreact_redux_arcgis_boilerplate=self.webpackChunkreact_redux_arcgis_boilerplate||[]).push([[8809],{51190:function(e,t,i){i.r(t),i.d(t,{default:function(){return b}});var r=i(82392),o=(i(3313),i(62991)),s=i(37623),n=i(19759),a=i(81482),l=i(6273),u=(i(80861),i(67498),i(25376)),d=i(26325),c=i(85049),h=i(11965),y=i(73462),p=i(74704),f=i(8e3);let g=class extends h.A{constructor(e){super(e),this.type="csv",this.refresh=(0,s.sg)((async e=>{await this.load();const{extent:t,timeExtent:i}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),i&&(this.sourceJSON.timeInfo.timeExtent=[i.start,i.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const i=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return p.A.fromJSON(i)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const i=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:i.count,extent:f.A.fromJSON(i.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _startWorker(e){this._connection=await(0,y.ho)("CSVSourceWorker",{strategy:(0,l.A)("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{url:t,delimiter:i,fields:r,latitudeField:o,longitudeField:s,spatialReference:n,timeInfo:a}=this.loadOptions,u=await this._connection.invoke("load",{url:t,customParameters:this.customParameters,parsingOptions:{delimiter:i,fields:r?.map((e=>e.toJSON())),latitudeField:o,longitudeField:s,spatialReference:n?.toJSON(),timeInfo:a?.toJSON()}},{signal:e});this.locationInfo=u.locationInfo,this.sourceJSON=u.layerDefinition,this.delimiter=u.delimiter}};(0,r._)([(0,a.MZ)()],g.prototype,"type",void 0),(0,r._)([(0,a.MZ)()],g.prototype,"loadOptions",void 0),(0,r._)([(0,a.MZ)()],g.prototype,"customParameters",void 0),(0,r._)([(0,a.MZ)()],g.prototype,"locationInfo",void 0),(0,r._)([(0,a.MZ)()],g.prototype,"sourceJSON",void 0),(0,r._)([(0,a.MZ)()],g.prototype,"delimiter",void 0),g=(0,r._)([(0,d.$)("esri.layers.graphics.sources.CSVSource")],g);var m=i(77159),v=i(33432),_=i(55714),w=i(44153);function S(e,t){throw new o.A(t,`CSVLayer (title: ${e.title}, id: ${e.id}) cannot be saved to a portal item`)}let O=class extends c.default{constructor(...e){super(...e),this.geometryType="point",this.capabilities=(0,m.f)(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=w.A.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null,i=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},e).catch(s.QP).then((async()=>this.initLayerProperties(await this.createGraphicsSource(t))));return this.addResolvingPromise(i),Promise.resolve(this)}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!t.layerDefinition?.drawingInfo?.labelingInfo}set url(e){if(!e)return void this._set("url",e);const t=(0,n.An)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async createGraphicsSource(e){const t=new g({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.delimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(v.A.from(e)||this.createQuery()))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(v.A.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(v.A.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(v.A.from(e)||this.createQuery())))}read(e,t){super.read(e,t),t&&"service"===t.origin&&this.revert(["latitudeField","longitudeField"],"service")}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}clone(){throw new o.A("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(e){return S(this,"csv-layer:save")}async saveAs(e,t){return S(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};(0,r._)([(0,a.MZ)({readOnly:!0,json:{read:!1,write:!1}})],O.prototype,"capabilities",void 0),(0,r._)([(0,a.MZ)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],O.prototype,"delimiter",void 0),(0,r._)([(0,a.MZ)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],O.prototype,"editingEnabled",void 0),(0,r._)([(0,a.MZ)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],O.prototype,"fields",void 0),(0,r._)([(0,a.MZ)({type:Boolean,readOnly:!0})],O.prototype,"isTable",null),(0,r._)([(0,u.w)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],O.prototype,"readWebMapLabelsVisible",null),(0,r._)([(0,a.MZ)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],O.prototype,"latitudeField",void 0),(0,r._)([(0,a.MZ)({type:["show","hide"]})],O.prototype,"listMode",void 0),(0,r._)([(0,a.MZ)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],O.prototype,"locationType",void 0),(0,r._)([(0,a.MZ)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],O.prototype,"longitudeField",void 0),(0,r._)([(0,a.MZ)({type:["CSV"]})],O.prototype,"operationalLayerType",void 0),(0,r._)([(0,a.MZ)()],O.prototype,"outFields",void 0),(0,r._)([(0,a.MZ)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],O.prototype,"path",void 0),(0,r._)([(0,a.MZ)({json:{read:!1},cast:null,type:g,readOnly:!0})],O.prototype,"source",void 0),(0,r._)([(0,a.MZ)({json:{read:!1},value:"csv",readOnly:!0})],O.prototype,"type",void 0),(0,r._)([(0,a.MZ)({json:{read:_.r,write:{isRequired:!0,ignoreOrigin:!0,writer:_.w}}})],O.prototype,"url",null),O=(0,r._)([(0,d.$)("esri.layers.CSVLayer")],O);const b=O}}]);
//# sourceMappingURL=8809.55cca1353ad5e43645a0.js.map