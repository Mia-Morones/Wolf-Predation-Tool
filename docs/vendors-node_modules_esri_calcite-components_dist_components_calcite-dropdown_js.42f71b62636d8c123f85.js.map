{"version":3,"file":"vendors-node_modules_esri_calcite-components_dist_components_calcite-dropdown_js.42f71b62636d8c123f85.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAC0E;;AAE1E,wBAAwB,2CAAQ;AAChC,4BAA4B,2CAAqB;;AAED;;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACsG;AACc;AAC+D;AAC7I;AACmD;AACzC;AAC8D;AACzD;AACqB;;AAE1E;AACA;AACA;;AAEA,uCAAuC,eAAe,yBAAyB,iBAAiB,wCAAwC,mDAAmD,oBAAoB,MAAM,qBAAqB,yGAAyG,UAAU,uBAAuB,iBAAiB,gCAAgC,8DAA8D,cAAc,kBAAkB,2CAA2C,kBAAkB,oDAAoD,kBAAkB,iDAAiD,yCAAyC,UAAU,0CAA0C,+BAA+B,sBAAsB,4EAA4E,uBAAuB,yEAAyE,sBAAsB,0EAA0E,SAAS,2EAA2E,UAAU,4EAA4E,UAAU,cAAc,OAAO,wCAAwC,mBAAmB,gCAAgC,oBAAoB,iBAAiB,gBAAgB,kBAAkB,mDAAmD,0CAA0C,2BAA2B,kBAAkB,aAAa,gBAAgB,cAAc,qBAAqB,sBAAsB,+BAA+B,wCAAwC,6BAA6B,uBAAuB,+BAA+B,uBAAuB,+BAA+B,uBAAuB,+BAA+B,gBAAgB,aAAa,SAAS,aAAa;AACz9D;;AAEA,+BAA+B,iFAAkB,wBAAwB,sEAAW;AACpF;AACA;AACA;AACA;AACA,qCAAqC,0EAAW;AAChD,0CAA0C,0EAAW;AACrD,oCAAoC,0EAAW;AAC/C,yCAAyC,0EAAW;AACpD,mCAAmC,0EAAW;AAC9C;AACA;AACA,gCAAgC,gDAAc;AAC9C,8BAA8B,gDAAc;AAC5C;AACA,wCAAwC,2CAAI,GAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA,kBAAkB,kDAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB;AAC5D;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA,oEAAoE,kBAAkB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAiB;AAC7B;AACA;AACA;AACA;AACA,YAAY,kDAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0CAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0CAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAA0B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,+CAAkB;AAChC,QAAQ,0CAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA,YAAY,yDAA0B;AACtC;AACA;AACA,QAAQ,kDAAiB;AACzB;AACA;AACA,QAAQ,+CAAsB;AAC9B;AACA;AACA,QAAQ,+CAAkB;AAC1B,QAAQ,kDAAiB;AACzB;AACA;AACA,QAAQ,kDAAqB;AAC7B;AACA;AACA;AACA;AACA,QAAQ,kDAAoB;AAC5B;AACA;AACA,gBAAgB,aAAa;AAC7B,gBAAgB,gEAAC,CAAC,+DAAI,IAAI,iDAAiD,EAAE,gEAAC,CAAC,8CAAoB,IAAI,0EAA0E,EAAE,gEAAC,UAAU,4FAA4F,KAAK,sGAAsG,EAAE,gEAAC,WAAW,qEAAqE,KAAK,yBAAyB,0CAAa,iGAAiG,IAAI,gEAAC,UAAU,gEAAgE,0CAAa,qEAAqE,EAAE,gEAAC,UAAU,uEAAuE,KAAK;AAC91B;AACA,iBAAiB,8CAAW;AAC5B,iBAAiB,8CAAW;AAC5B,aAAa,SAAS,KAAK,4DAA4D,EAAE,gEAAC,WAAW,kFAAkF;AACvL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iFAAiF;AACjG,eAAe,kDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0CAAmB;AACnC;AACA;AACA,gBAAgB,0CAAmB;AACnC;AACA;AACA,gBAAgB,0CAAmB;AACnC;AACA;AACA,gBAAgB,0CAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,0CAAY;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC;AAClC,eAAe;AACf,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEmD;;AAEnD","sources":["webpack://react-redux-arcgis-boilerplate/./node_modules/@esri/calcite-components/dist/components/calcite-dropdown.js","webpack://react-redux-arcgis-boilerplate/./node_modules/@esri/calcite-components/dist/components/dropdown.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { D as Dropdown, d as defineCustomElement$1 } from './dropdown.js';\n\nconst CalciteDropdown = Dropdown;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteDropdown, defineCustomElement };\n\n//# sourceMappingURL=calcite-dropdown.js.map","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { e as focusElement, f as focusFirstTabbable, t as toAriaBoolean, v as focusElementInGroup } from './dom.js';\nimport { f as filterValidFlipPlacements, c as connectFloatingUI, e as defaultMenuPlacement, a as disconnectFloatingUI, F as FloatingCSS, r as reposition } from './floating-ui.js';\nimport { g as guid } from './guid.js';\nimport { u as updateHostInteraction, I as InteractiveContainer } from './interactive.js';\nimport { i as isActivationKey } from './key.js';\nimport { c as componentFocusable, s as setUpLoadableComponent, a as setComponentLoaded } from './loadable.js';\nimport { c as createObserver } from './observers.js';\nimport { o as onToggleOpenCloseComponent } from './openCloseComponent.js';\n\nconst SLOTS = {\n    dropdownTrigger: \"trigger\",\n};\n\nconst dropdownCss = \":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:inline-block}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host .calcite-dropdown-wrapper{--calcite-floating-ui-z-index:var(--calcite-z-index-dropdown);display:block;position:absolute;z-index:var(--calcite-floating-ui-z-index);visibility:hidden}.calcite-dropdown-wrapper .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset, left, opacity;opacity:0;box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);z-index:var(--calcite-z-index);border-radius:0.25rem}.calcite-dropdown-wrapper[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}.calcite-dropdown-wrapper[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}.calcite-dropdown-wrapper[data-placement^=left] .calcite-floating-ui-anim{left:5px}.calcite-dropdown-wrapper[data-placement^=right] .calcite-floating-ui-anim{left:-5px}.calcite-dropdown-wrapper[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block:0;left:0}:host([open]) .calcite-dropdown-wrapper{visibility:visible}:host .calcite-dropdown-content{max-block-size:45vh;inline-size:auto;overflow-y:auto;overflow-x:hidden;background-color:var(--calcite-color-foreground-1);inline-size:var(--calcite-dropdown-width)}.calcite-trigger-container{position:relative;display:flex;block-size:100%;flex:1 1 auto;word-wrap:break-word;word-break:break-word}@media (forced-colors: active){:host([open]) .calcite-dropdown-wrapper{border:1px solid canvasText}}:host([width-scale=s]){--calcite-dropdown-width:12rem}:host([width-scale=m]){--calcite-dropdown-width:14rem}:host([width-scale=l]){--calcite-dropdown-width:16rem}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteDropdownStyle0 = dropdownCss;\n\nconst Dropdown = /*@__PURE__*/ proxyCustomElement(class Dropdown extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.calciteDropdownSelect = createEvent(this, \"calciteDropdownSelect\", 6);\n        this.calciteDropdownBeforeClose = createEvent(this, \"calciteDropdownBeforeClose\", 6);\n        this.calciteDropdownClose = createEvent(this, \"calciteDropdownClose\", 6);\n        this.calciteDropdownBeforeOpen = createEvent(this, \"calciteDropdownBeforeOpen\", 6);\n        this.calciteDropdownOpen = createEvent(this, \"calciteDropdownOpen\", 6);\n        this.items = [];\n        this.groups = [];\n        this.mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n        this.resizeObserver = createObserver(\"resize\", (entries) => this.resizeObserverCallback(entries));\n        this.openTransitionProp = \"opacity\";\n        this.guid = `calcite-dropdown-${guid()}`;\n        this.focusLastDropdownItem = false;\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.setFilteredPlacements = () => {\n            const { el, flipPlacements } = this;\n            this.filteredFlipPlacements = flipPlacements\n                ? filterValidFlipPlacements(flipPlacements, el)\n                : null;\n        };\n        this.updateTriggers = (event) => {\n            this.triggers = event.target.assignedElements({\n                flatten: true,\n            });\n            this.reposition(true);\n        };\n        this.updateItems = () => {\n            this.items = this.groups\n                .map((group) => Array.from(group?.querySelectorAll(\"calcite-dropdown-item\")))\n                .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n            this.updateSelectedItems();\n            this.reposition(true);\n            this.items.forEach((item) => (item.scale = this.scale));\n        };\n        this.updateGroups = (event) => {\n            const groups = event.target\n                .assignedElements({ flatten: true })\n                .filter((el) => el?.matches(\"calcite-dropdown-group\"));\n            this.groups = groups;\n            this.updateItems();\n            this.updateGroupScale();\n        };\n        this.resizeObserverCallback = (entries) => {\n            entries.forEach((entry) => {\n                const { target } = entry;\n                if (target === this.referenceEl) {\n                    this.setDropdownWidth();\n                }\n                else if (target === this.scrollerEl) {\n                    this.setMaxScrollerHeight();\n                }\n            });\n        };\n        this.setDropdownWidth = () => {\n            const { referenceEl, scrollerEl } = this;\n            const referenceElWidth = referenceEl?.clientWidth;\n            if (!referenceElWidth || !scrollerEl) {\n                return;\n            }\n            scrollerEl.style.minWidth = `${referenceElWidth}px`;\n        };\n        this.setMaxScrollerHeight = () => {\n            const { scrollerEl } = this;\n            if (!scrollerEl) {\n                return;\n            }\n            this.reposition(true);\n            const maxScrollerHeight = this.getMaxScrollerHeight();\n            scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n            this.reposition(true);\n        };\n        this.setScrollerAndTransitionEl = (el) => {\n            this.resizeObserver.observe(el);\n            this.scrollerEl = el;\n            this.transitionEl = el;\n        };\n        this.setReferenceEl = (el) => {\n            this.referenceEl = el;\n            connectFloatingUI(this, this.referenceEl, this.floatingEl);\n            this.resizeObserver.observe(el);\n        };\n        this.setFloatingEl = (el) => {\n            this.floatingEl = el;\n            connectFloatingUI(this, this.referenceEl, this.floatingEl);\n        };\n        this.keyDownHandler = (event) => {\n            if (!event.composedPath().includes(this.referenceEl)) {\n                return;\n            }\n            const { defaultPrevented, key } = event;\n            if (defaultPrevented) {\n                return;\n            }\n            if (key === \"Escape\") {\n                this.closeCalciteDropdown();\n                event.preventDefault();\n                return;\n            }\n            if (this.open && event.shiftKey && key === \"Tab\") {\n                this.closeCalciteDropdown();\n                event.preventDefault();\n                return;\n            }\n            if (isActivationKey(key)) {\n                this.toggleDropdown();\n                event.preventDefault();\n            }\n            else if (key === \"ArrowDown\" || key === \"ArrowUp\") {\n                this.focusLastDropdownItem = key === \"ArrowUp\";\n                this.open = true;\n                this.el.addEventListener(\"calciteDropdownOpen\", this.onOpenEnd);\n            }\n        };\n        this.focusOnFirstActiveOrDefaultItem = () => {\n            const selectedItem = this.getTraversableItems().find((item) => item.selected);\n            const target = selectedItem ||\n                (this.focusLastDropdownItem ? this.items[this.items.length - 1] : this.items[0]);\n            this.focusLastDropdownItem = false;\n            if (!target) {\n                return;\n            }\n            focusElement(target);\n        };\n        this.onOpenEnd = () => {\n            this.focusOnFirstActiveOrDefaultItem();\n            this.el.removeEventListener(\"calciteDropdownOpen\", this.onOpenEnd);\n        };\n        this.toggleDropdown = () => {\n            this.open = !this.open;\n            if (this.open) {\n                this.el.addEventListener(\"calciteDropdownOpen\", this.onOpenEnd);\n            }\n        };\n        this.open = false;\n        this.closeOnSelectDisabled = false;\n        this.disabled = false;\n        this.flipPlacements = undefined;\n        this.maxItems = 0;\n        this.overlayPositioning = \"absolute\";\n        this.placement = defaultMenuPlacement;\n        this.selectedItems = [];\n        this.type = \"click\";\n        this.widthScale = undefined;\n        this.scale = \"m\";\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n        if (this.disabled) {\n            this.open = false;\n            return;\n        }\n        this.reposition(true);\n    }\n    handleDisabledChange(value) {\n        if (!value) {\n            this.open = false;\n        }\n    }\n    flipPlacementsHandler() {\n        this.setFilteredPlacements();\n        this.reposition(true);\n    }\n    maxItemsHandler() {\n        this.setMaxScrollerHeight();\n    }\n    overlayPositioningHandler() {\n        this.reposition(true);\n    }\n    placementHandler() {\n        this.reposition(true);\n    }\n    handlePropsChange() {\n        this.updateItems();\n        this.updateGroupScale();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component's first focusable element. */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.referenceEl);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n        this.setFilteredPlacements();\n        if (this.open) {\n            this.openHandler();\n            onToggleOpenCloseComponent(this);\n        }\n        this.updateItems();\n        connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    disconnectedCallback() {\n        this.mutationObserver?.disconnect();\n        this.resizeObserver?.disconnect();\n        disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    render() {\n        const { open, guid } = this;\n        return (h(Host, { key: '377c3d9687bc025f004b4efe58bfa5f0893d86d0' }, h(InteractiveContainer, { key: '9e2f48be045fc6db10cc7203a8b998ec2b6abafd', disabled: this.disabled }, h(\"div\", { key: '8607de2d53a4f8c4b29206ee56aa23ad4c2cbe3d', class: \"calcite-trigger-container\", id: `${guid}-menubutton`, onClick: this.toggleDropdown, onKeyDown: this.keyDownHandler, ref: this.setReferenceEl }, h(\"slot\", { key: '07de8df34055ddc39301654a5ca312ddf293e6a9', \"aria-controls\": `${guid}-menu`, \"aria-expanded\": toAriaBoolean(open), \"aria-haspopup\": \"menu\", name: SLOTS.dropdownTrigger, onSlotchange: this.updateTriggers })), h(\"div\", { key: 'c1469efb62eb704b021ce6479ad55deda59582d4', \"aria-hidden\": toAriaBoolean(!open), class: \"calcite-dropdown-wrapper\", ref: this.setFloatingEl }, h(\"div\", { key: 'f875166d486a53cd393f17d9295974aa449d449f', \"aria-labelledby\": `${guid}-menubutton`, class: {\n                [\"calcite-dropdown-content\"]: true,\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: open,\n            }, id: `${guid}-menu`, ref: this.setScrollerAndTransitionEl, role: \"menu\" }, h(\"slot\", { key: 'bc6e61383aaf85b3d6242a86c50da68bc8b31e27', onSlotchange: this.updateGroups }))))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Updates the position of the component.\n     *\n     * @param delayed\n     */\n    async reposition(delayed = false) {\n        const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n        return reposition(this, {\n            floatingEl,\n            referenceEl,\n            overlayPositioning,\n            placement,\n            flipPlacements: filteredFlipPlacements,\n            type: \"menu\",\n        }, delayed);\n    }\n    closeCalciteDropdownOnClick(event) {\n        if (this.disabled || !this.open || event.composedPath().includes(this.el)) {\n            return;\n        }\n        this.closeCalciteDropdown(false);\n    }\n    closeCalciteDropdownOnEvent(event) {\n        this.closeCalciteDropdown();\n        event.stopPropagation();\n    }\n    closeCalciteDropdownOnOpenEvent(event) {\n        if (event.composedPath().includes(this.el)) {\n            return;\n        }\n        this.open = false;\n    }\n    pointerEnterHandler() {\n        if (this.disabled || this.type !== \"hover\") {\n            return;\n        }\n        this.toggleDropdown();\n    }\n    pointerLeaveHandler() {\n        if (this.disabled || this.type !== \"hover\") {\n            return;\n        }\n        this.closeCalciteDropdown();\n    }\n    getTraversableItems() {\n        return this.items.filter((item) => !item.disabled && !item.hidden);\n    }\n    calciteInternalDropdownItemKeyEvent(event) {\n        const { keyboardEvent } = event.detail;\n        const target = keyboardEvent.target;\n        const traversableItems = this.getTraversableItems();\n        switch (keyboardEvent.key) {\n            case \"Tab\":\n                this.open = false;\n                this.updateTabIndexOfItems(target);\n                break;\n            case \"ArrowDown\":\n                focusElementInGroup(traversableItems, target, \"next\");\n                break;\n            case \"ArrowUp\":\n                focusElementInGroup(traversableItems, target, \"previous\");\n                break;\n            case \"Home\":\n                focusElementInGroup(traversableItems, target, \"first\");\n                break;\n            case \"End\":\n                focusElementInGroup(traversableItems, target, \"last\");\n                break;\n        }\n        event.stopPropagation();\n    }\n    handleItemSelect(event) {\n        this.updateSelectedItems();\n        event.stopPropagation();\n        this.calciteDropdownSelect.emit();\n        if (!this.closeOnSelectDisabled ||\n            event.detail.requestedDropdownGroup.selectionMode === \"none\") {\n            this.closeCalciteDropdown();\n        }\n        event.stopPropagation();\n    }\n    updateGroupScale() {\n        this.groups?.forEach((group) => (group.scale = this.scale));\n    }\n    onBeforeOpen() {\n        this.calciteDropdownBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calciteDropdownOpen.emit();\n    }\n    onBeforeClose() {\n        this.calciteDropdownBeforeClose.emit();\n    }\n    onClose() {\n        this.calciteDropdownClose.emit();\n    }\n    updateSelectedItems() {\n        this.selectedItems = this.items.filter((item) => item.selected);\n    }\n    getMaxScrollerHeight() {\n        const { maxItems, items } = this;\n        let itemsToProcess = 0;\n        let maxScrollerHeight = 0;\n        let groupHeaderHeight;\n        this.groups.forEach((group) => {\n            if (maxItems > 0 && itemsToProcess < maxItems) {\n                Array.from(group.children).forEach((item, index) => {\n                    if (index === 0) {\n                        if (isNaN(groupHeaderHeight)) {\n                            groupHeaderHeight = item.offsetTop;\n                        }\n                        maxScrollerHeight += groupHeaderHeight;\n                    }\n                    if (itemsToProcess < maxItems) {\n                        maxScrollerHeight += item.offsetHeight;\n                        itemsToProcess += 1;\n                    }\n                });\n            }\n        });\n        return items.length > maxItems ? maxScrollerHeight : 0;\n    }\n    closeCalciteDropdown(focusTrigger = true) {\n        this.open = false;\n        if (focusTrigger) {\n            focusElement(this.triggers[0]);\n        }\n    }\n    updateTabIndexOfItems(target) {\n        this.items.forEach((item) => {\n            item.tabIndex = target !== item ? -1 : 0;\n        });\n    }\n    static get delegatesFocus() { return true; }\n    get el() { return this; }\n    static get watchers() { return {\n        \"open\": [\"openHandler\"],\n        \"disabled\": [\"handleDisabledChange\"],\n        \"flipPlacements\": [\"flipPlacementsHandler\"],\n        \"maxItems\": [\"maxItemsHandler\"],\n        \"overlayPositioning\": [\"overlayPositioningHandler\"],\n        \"placement\": [\"placementHandler\"],\n        \"scale\": [\"handlePropsChange\"]\n    }; }\n    static get style() { return CalciteDropdownStyle0; }\n}, [17, \"calcite-dropdown\", {\n        \"open\": [1540],\n        \"closeOnSelectDisabled\": [516, \"close-on-select-disabled\"],\n        \"disabled\": [516],\n        \"flipPlacements\": [16],\n        \"maxItems\": [514, \"max-items\"],\n        \"overlayPositioning\": [513, \"overlay-positioning\"],\n        \"placement\": [513],\n        \"selectedItems\": [1040],\n        \"type\": [513],\n        \"widthScale\": [513, \"width-scale\"],\n        \"scale\": [513],\n        \"setFocus\": [64],\n        \"reposition\": [64]\n    }, [[8, \"click\", \"closeCalciteDropdownOnClick\"], [0, \"calciteInternalDropdownCloseRequest\", \"closeCalciteDropdownOnEvent\"], [8, \"calciteDropdownOpen\", \"closeCalciteDropdownOnOpenEvent\"], [1, \"pointerenter\", \"pointerEnterHandler\"], [1, \"pointerleave\", \"pointerLeaveHandler\"], [0, \"calciteInternalDropdownItemKeyEvent\", \"calciteInternalDropdownItemKeyEvent\"], [0, \"calciteInternalDropdownItemSelect\", \"handleItemSelect\"]], {\n        \"open\": [\"openHandler\"],\n        \"disabled\": [\"handleDisabledChange\"],\n        \"flipPlacements\": [\"flipPlacementsHandler\"],\n        \"maxItems\": [\"maxItemsHandler\"],\n        \"overlayPositioning\": [\"overlayPositioningHandler\"],\n        \"placement\": [\"placementHandler\"],\n        \"scale\": [\"handlePropsChange\"]\n    }]);\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"calcite-dropdown\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"calcite-dropdown\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Dropdown);\n            }\n            break;\n    } });\n}\ndefineCustomElement();\n\nexport { Dropdown as D, defineCustomElement as d };\n\n//# sourceMappingURL=dropdown.js.map"],"names":[],"sourceRoot":""}