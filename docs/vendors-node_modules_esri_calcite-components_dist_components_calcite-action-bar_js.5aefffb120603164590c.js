"use strict";
(self["webpackChunkreact_redux_arcgis_boilerplate"] = self["webpackChunkreact_redux_arcgis_boilerplate"] || []).push([["vendors-node_modules_esri_calcite-components_dist_components_calcite-action-bar_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/components/ExpandToggle.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/ExpandToggle.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   E: function() { return /* binding */ ExpandToggle; },
/* harmony export */   a: function() { return /* binding */ getOverflowCount; },
/* harmony export */   g: function() { return /* binding */ geActionDimensions; },
/* harmony export */   o: function() { return /* binding */ overflowActions; },
/* harmony export */   q: function() { return /* binding */ queryActions; },
/* harmony export */   t: function() { return /* binding */ toggleChildActionText; }
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stencil/core/internal/client */ "./node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _action_group_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./action-group.js */ "./node_modules/@esri/calcite-components/dist/components/action-group.js");
/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./action-menu.js */ "./node_modules/@esri/calcite-components/dist/components/action-menu.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.13.2
 */





const groupBufferPx = 2;
const getAverage = (arr) => arr.reduce((p, c) => p + c, 0) / arr.length;
const geActionDimensions = (actions) => {
    const actionsNotSlotted = actions.filter((action) => action.slot !== _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions);
    const actionLen = actionsNotSlotted?.length;
    return {
        actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,
        actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,
    };
};
const getMaxActionCount = ({ width, actionWidth, layout, height, actionHeight, groupCount, }) => {
    const maxContainerPx = layout === "horizontal" ? width : height;
    const avgItemPx = layout === "horizontal" ? actionWidth : actionHeight;
    return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);
};
const getOverflowCount = ({ layout, actionCount, actionWidth, width, actionHeight, height, groupCount, }) => {
    return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);
};
const queryActions = (el) => {
    return Array.from(el.querySelectorAll("calcite-action")).filter((action) => action.closest("calcite-action-menu") ? action.slot === _action_menu_js__WEBPACK_IMPORTED_MODULE_2__.S.trigger : true);
};
const overflowActions = ({ actionGroups, expanded, overflowCount, }) => {
    let needToSlotCount = overflowCount;
    actionGroups.reverse().forEach((group) => {
        let slottedWithinGroupCount = 0;
        const groupActions = queryActions(group).reverse();
        groupActions.forEach((groupAction) => {
            if (groupAction.slot === _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions) {
                groupAction.removeAttribute("slot");
                groupAction.textEnabled = expanded;
            }
        });
        if (needToSlotCount > 0) {
            groupActions.some((groupAction) => {
                const unslottedActions = groupActions.filter((action) => !action.slot);
                if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest("calcite-action-menu")) {
                    groupAction.textEnabled = true;
                    groupAction.setAttribute("slot", _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions);
                    slottedWithinGroupCount++;
                    if (slottedWithinGroupCount > 1) {
                        needToSlotCount--;
                    }
                }
                return needToSlotCount < 1;
            });
        }
        (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_3__.forceUpdate)(group);
    });
};

const ICONS = {
    chevronsLeft: "chevrons-left",
    chevronsRight: "chevrons-right",
};
function getCalcitePosition(position, el) {
    return position || el.closest("calcite-shell-panel")?.position || "start";
}
function toggleChildActionText({ el, expanded, }) {
    queryActions(el)
        .filter((el) => el.slot !== _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions)
        .forEach((action) => (action.textEnabled = expanded));
    el.querySelectorAll("calcite-action-group, calcite-action-menu").forEach((el) => (el.expanded = expanded));
}
const setTooltipReference = ({ tooltip, referenceElement, expanded, ref, }) => {
    if (tooltip) {
        tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;
    }
    if (ref) {
        ref(referenceElement);
    }
    return referenceElement;
};
const ExpandToggle = ({ expanded, expandText, collapseText, expandLabel, collapseLabel, toggle, el, position, tooltip, ref, scale, }) => {
    const rtl = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.a)(el) === "rtl";
    const text = expanded ? collapseText : expandText;
    const label = expanded ? collapseLabel : expandLabel;
    const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];
    if (rtl) {
        icons.reverse();
    }
    const end = getCalcitePosition(position, el) === "end";
    const expandIcon = end ? icons[1] : icons[0];
    const collapseIcon = end ? icons[0] : icons[1];
    const actionNode = ((0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-action", { icon: expanded ? expandIcon : collapseIcon, id: "expand-toggle", label: label, onClick: toggle, ref: (referenceElement) => setTooltipReference({ tooltip, referenceElement, expanded, ref }), scale: scale, text: text, textEnabled: expanded, title: !expanded && !tooltip ? text : null }));
    return actionNode;
};



//# sourceMappingURL=ExpandToggle.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/components/calcite-action-bar.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/calcite-action-bar.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteActionBar: function() { return /* binding */ CalciteActionBar; },
/* harmony export */   defineCustomElement: function() { return /* binding */ defineCustomElement; }
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @stencil/core/internal/client */ "./node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conditionalSlot.js */ "./node_modules/@esri/calcite-components/dist/components/conditionalSlot.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale.js */ "./node_modules/@esri/calcite-components/dist/components/locale.js");
/* harmony import */ var _observers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./observers.js */ "./node_modules/@esri/calcite-components/dist/components/observers.js");
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./t9n.js */ "./node_modules/@esri/calcite-components/dist/components/t9n.js");
/* harmony import */ var _ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ExpandToggle.js */ "./node_modules/@esri/calcite-components/dist/components/ExpandToggle.js");
/* harmony import */ var _resources_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resources.js */ "./node_modules/@esri/calcite-components/dist/components/resources.js");
/* harmony import */ var _action_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./action.js */ "./node_modules/@esri/calcite-components/dist/components/action.js");
/* harmony import */ var _action_group_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./action-group.js */ "./node_modules/@esri/calcite-components/dist/components/action-group.js");
/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./action-menu.js */ "./node_modules/@esri/calcite-components/dist/components/action-menu.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components/dist/components/icon.js");
/* harmony import */ var _loader_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./loader.js */ "./node_modules/@esri/calcite-components/dist/components/loader.js");
/* harmony import */ var _popover_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./popover.js */ "./node_modules/@esri/calcite-components/dist/components/popover.js");
/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./debounce.js */ "./node_modules/@esri/calcite-components/dist/components/debounce.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.13.2
 */

















const CSS = {
    actionGroupEnd: "action-group--end",
};
const SLOTS = {
    actionsEnd: "actions-end",
    bottomActions: "bottom-actions",
    expandTooltip: "expand-tooltip",
};

const actionBarCss = ":host{box-sizing:border-box;background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{pointer-events:auto;display:inline-flex;align-self:stretch;gap:var(--calcite-action-bar-items-space, 0)}:host([layout=vertical]){flex-direction:column}:host([layout=vertical]):host([overflow-actions-disabled]){overflow-y:auto}:host([layout=vertical]):host([expanded]){max-inline-size:var(--calcite-action-bar-expanded-max-width, auto)}:host([layout=vertical]) .action-group--end{margin-block-start:auto}:host([layout=vertical]) ::slotted(calcite-action-group:not(:last-of-type)){border-block-end-width:var(--calcite-border-width-sm)}:host([layout=horizontal]){flex-direction:row}:host([layout=horizontal]):host([overflow-actions-disabled]){overflow-x:auto}:host([layout=horizontal]) .action-group--end{margin-inline-start:auto}:host([layout=horizontal]) ::slotted(calcite-action-group:not(:last-of-type)){border-inline-end-width:var(--calcite-border-width-sm)}.action-group--end{justify-content:flex-end}:host([hidden]){display:none}[hidden]{display:none}";
const CalciteActionBarStyle0 = actionBarCss;

const ActionBar = /*@__PURE__*/ (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.proxyCustomElement)(class ActionBar extends _stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.calciteActionBarToggle = (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.createEvent)(this, "calciteActionBarToggle", 6);
        this.mutationObserver = (0,_observers_js__WEBPACK_IMPORTED_MODULE_4__.c)("mutation", () => {
            const { el, expanded } = this;
            (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.t)({ el, expanded });
            this.overflowActions();
        });
        this.resizeObserver = (0,_observers_js__WEBPACK_IMPORTED_MODULE_4__.c)("resize", (entries) => this.resizeHandlerEntries(entries));
        // --------------------------------------------------------------------------
        //
        //  Private Methods
        //
        // --------------------------------------------------------------------------
        this.actionMenuOpenHandler = (event) => {
            if (event.target.menuOpen) {
                const composedPath = event.composedPath();
                Array.from(this.el.querySelectorAll("calcite-action-group")).forEach((group) => {
                    if (!composedPath.includes(group)) {
                        group.menuOpen = false;
                    }
                });
            }
        };
        this.resizeHandlerEntries = (entries) => {
            entries.forEach(this.resizeHandler);
        };
        this.resizeHandler = (entry) => {
            const { width, height } = entry.contentRect;
            this.resize({ width, height });
        };
        this.resize = (0,_debounce_js__WEBPACK_IMPORTED_MODULE_14__.d)(({ width, height }) => {
            const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;
            if (overflowActionsDisabled ||
                (layout === "vertical" && !height) ||
                (layout === "horizontal" && !width)) {
                return;
            }
            const actions = (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.q)(el);
            const actionCount = expandDisabled ? actions.length : actions.length + 1;
            const actionGroups = Array.from(el.querySelectorAll("calcite-action-group"));
            this.setGroupLayout(actionGroups);
            const groupCount = this.hasActionsEnd || this.hasBottomActions || !expandDisabled
                ? actionGroups.length + 1
                : actionGroups.length;
            const { actionHeight, actionWidth } = (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.g)(actions);
            const overflowCount = (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.a)({
                layout,
                actionCount,
                actionHeight,
                actionWidth,
                height,
                width,
                groupCount,
            });
            (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.o)({
                actionGroups,
                expanded,
                overflowCount,
            });
        }, _resources_js__WEBPACK_IMPORTED_MODULE_7__.D.resize);
        this.toggleExpand = () => {
            this.expanded = !this.expanded;
            this.calciteActionBarToggle.emit();
        };
        this.handleDefaultSlotChange = (event) => {
            const groups = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.s)(event).filter((el) => el.matches("calcite-action-group"));
            this.setGroupLayout(groups);
        };
        this.handleActionsEndSlotChange = (event) => {
            this.hasActionsEnd = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.d)(event);
        };
        this.handleBottomActionsSlotChange = (event) => {
            this.hasBottomActions = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.d)(event);
        };
        this.handleTooltipSlotChange = (event) => {
            const tooltips = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.s)(event).filter((el) => el?.matches("calcite-tooltip"));
            this.expandTooltip = tooltips[0];
        };
        this.actionsEndGroupLabel = undefined;
        this.expandDisabled = false;
        this.expanded = false;
        this.layout = "vertical";
        this.overflowActionsDisabled = false;
        this.overlayPositioning = "absolute";
        this.position = undefined;
        this.scale = undefined;
        this.messages = undefined;
        this.messageOverrides = undefined;
        this.effectiveLocale = undefined;
        this.hasActionsEnd = false;
        this.hasBottomActions = false;
        this.expandTooltip = undefined;
        this.defaultMessages = undefined;
    }
    expandHandler() {
        this.overflowActions();
    }
    expandedHandler() {
        const { el, expanded } = this;
        (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.t)({ el, expanded });
        this.overflowActions();
    }
    layoutHandler() {
        this.updateGroups();
    }
    overflowDisabledHandler(overflowActionsDisabled) {
        if (overflowActionsDisabled) {
            this.resizeObserver?.disconnect();
            return;
        }
        this.resizeObserver?.observe(this.el);
        this.overflowActions();
    }
    onMessagesChange() {
        /* wired up by t9n util */
    }
    effectiveLocaleChange() {
        (0,_t9n_js__WEBPACK_IMPORTED_MODULE_5__.u)(this, this.effectiveLocale);
    }
    // --------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    // --------------------------------------------------------------------------
    componentDidLoad() {
        const { el, expanded } = this;
        (0,_loadable_js__WEBPACK_IMPORTED_MODULE_2__.a)(this);
        (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.t)({ el, expanded });
        this.overflowActions();
    }
    connectedCallback() {
        const { el, expanded } = this;
        (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
        (0,_t9n_js__WEBPACK_IMPORTED_MODULE_5__.c)(this);
        (0,_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.t)({ el, expanded });
        this.mutationObserver?.observe(el, { childList: true, subtree: true });
        if (!this.overflowActionsDisabled) {
            this.resizeObserver?.observe(el);
        }
        this.overflowActions();
        (0,_conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
    }
    async componentWillLoad() {
        (0,_loadable_js__WEBPACK_IMPORTED_MODULE_2__.s)(this);
        await (0,_t9n_js__WEBPACK_IMPORTED_MODULE_5__.s)(this);
    }
    disconnectedCallback() {
        this.mutationObserver?.disconnect();
        this.resizeObserver?.disconnect();
        (0,_conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__.d)(this);
        (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
        (0,_t9n_js__WEBPACK_IMPORTED_MODULE_5__.d)(this);
    }
    // --------------------------------------------------------------------------
    //
    //  Methods
    //
    // --------------------------------------------------------------------------
    /**
     * Overflows actions that won't fit into menus.
     *
     * @internal
     */
    async overflowActions() {
        this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });
    }
    /**
     * Sets focus on the component's first focusable element.
     */
    async setFocus() {
        await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
        (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.f)(this.el);
    }
    updateGroups() {
        this.setGroupLayout(Array.from(this.el.querySelectorAll("calcite-action-group")));
    }
    setGroupLayout(groups) {
        groups.forEach((group) => (group.layout = this.layout));
    }
    // --------------------------------------------------------------------------
    //
    //  Render Methods
    //
    // --------------------------------------------------------------------------
    renderBottomActionGroup() {
        const { expanded, expandDisabled, el, position, toggleExpand, scale, layout, messages, actionsEndGroupLabel, overlayPositioning, } = this;
        const expandToggleNode = !expandDisabled ? ((0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)(_ExpandToggle_js__WEBPACK_IMPORTED_MODULE_6__.E, { collapseLabel: messages.collapseLabel, collapseText: messages.collapse, el: el, expandLabel: messages.expandLabel, expandText: messages.expand, expanded: expanded, position: position, scale: scale, toggle: toggleExpand, tooltip: this.expandTooltip })) : null;
        return ((0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)("calcite-action-group", { class: CSS.actionGroupEnd, hidden: this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions), label: actionsEndGroupLabel, layout: layout, overlayPositioning: overlayPositioning, scale: scale }, (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)("slot", { name: SLOTS.actionsEnd, onSlotchange: this.handleActionsEndSlotChange }), (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)("slot", { name: SLOTS.bottomActions, onSlotchange: this.handleBottomActionsSlotChange }), (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)("slot", { name: SLOTS.expandTooltip, onSlotchange: this.handleTooltipSlotChange }), expandToggleNode));
    }
    render() {
        return ((0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)(_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.Host, { key: 'ff6e365531a0ed2032864bb0777910c3932e9c6b', onCalciteActionMenuOpen: this.actionMenuOpenHandler }, (0,_stencil_core_internal_client__WEBPACK_IMPORTED_MODULE_15__.h)("slot", { key: 'f12b2f455752a62ee32b65224bed385940135a49', onSlotchange: this.handleDefaultSlotChange }), this.renderBottomActionGroup()));
    }
    static get assetsDirs() { return ["assets"]; }
    get el() { return this; }
    static get watchers() { return {
        "expandDisabled": ["expandHandler"],
        "expanded": ["expandedHandler"],
        "layout": ["layoutHandler"],
        "overflowActionsDisabled": ["overflowDisabledHandler"],
        "messageOverrides": ["onMessagesChange"],
        "effectiveLocale": ["effectiveLocaleChange"]
    }; }
    static get style() { return CalciteActionBarStyle0; }
}, [1, "calcite-action-bar", {
        "actionsEndGroupLabel": [1, "actions-end-group-label"],
        "expandDisabled": [516, "expand-disabled"],
        "expanded": [1540],
        "layout": [513],
        "overflowActionsDisabled": [516, "overflow-actions-disabled"],
        "overlayPositioning": [513, "overlay-positioning"],
        "position": [513],
        "scale": [513],
        "messages": [1040],
        "messageOverrides": [1040],
        "effectiveLocale": [32],
        "hasActionsEnd": [32],
        "hasBottomActions": [32],
        "expandTooltip": [32],
        "defaultMessages": [32],
        "overflowActions": [64],
        "setFocus": [64]
    }, undefined, {
        "expandDisabled": ["expandHandler"],
        "expanded": ["expandedHandler"],
        "layout": ["layoutHandler"],
        "overflowActionsDisabled": ["overflowDisabledHandler"],
        "messageOverrides": ["onMessagesChange"],
        "effectiveLocale": ["effectiveLocaleChange"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["calcite-action-bar", "calcite-action", "calcite-action-group", "calcite-action-menu", "calcite-icon", "calcite-loader", "calcite-popover"];
    components.forEach(tagName => { switch (tagName) {
        case "calcite-action-bar":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ActionBar);
            }
            break;
        case "calcite-action":
            if (!customElements.get(tagName)) {
                (0,_action_js__WEBPACK_IMPORTED_MODULE_8__.d)();
            }
            break;
        case "calcite-action-group":
            if (!customElements.get(tagName)) {
                (0,_action_group_js__WEBPACK_IMPORTED_MODULE_9__.d)();
            }
            break;
        case "calcite-action-menu":
            if (!customElements.get(tagName)) {
                (0,_action_menu_js__WEBPACK_IMPORTED_MODULE_10__.d)();
            }
            break;
        case "calcite-icon":
            if (!customElements.get(tagName)) {
                (0,_icon_js__WEBPACK_IMPORTED_MODULE_11__.d)();
            }
            break;
        case "calcite-loader":
            if (!customElements.get(tagName)) {
                (0,_loader_js__WEBPACK_IMPORTED_MODULE_12__.d)();
            }
            break;
        case "calcite-popover":
            if (!customElements.get(tagName)) {
                (0,_popover_js__WEBPACK_IMPORTED_MODULE_13__.d)();
            }
            break;
    } });
}
defineCustomElement$1();

const CalciteActionBar = ActionBar;
const defineCustomElement = defineCustomElement$1;



//# sourceMappingURL=calcite-action-bar.js.map

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_esri_calcite-components_dist_components_calcite-action-bar_js.5aefffb120603164590c.js.map