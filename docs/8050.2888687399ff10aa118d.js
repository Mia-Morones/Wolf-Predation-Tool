"use strict";(self.webpackChunkreact_redux_arcgis_boilerplate=self.webpackChunkreact_redux_arcgis_boilerplate||[]).push([[8050],{28050:function(e,t,r){r.r(t),r.d(t,{default:function(){return x}});var a,n=r(82392),i=(r(3313),r(38116)),o=r(62991),l=r(1817),s=r(67214),u=r(81482),p=(r(6273),r(80861),r(67498),r(26325)),d=r(44153),c=r(8e3),g=r(2532),y=r(45449),h=r(20923),b=r(51177),w=r(22111),v=r(15089),M=r(26574);const m=new(r(10259).U)("0/0/0",0,0,0,void 0);let A=a=class extends((0,h.dM)((0,w.j)((0,b.J)(y.A)))){constructor(){super(...arguments),this.tileInfo=M.A.create({spatialReference:d.A.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new c.A(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,d.A.WebMercator),this.spatialReference=d.A.WebMercator}getTileBounds(e,t,r,a){const n=a||(0,g.vt)();return m.level=e,m.row=t,m.col=r,m.extent=n,this.tileInfo.updateTileInfo(m),m.extent=void 0,n}fetchTile(e,t,r,a={}){const{signal:n}=a,o=this.getTileUrl(e,t,r),l={responseType:"image",signal:n,query:{...this.refreshParameters}};return(0,i.A)(o??"",l).then((e=>e.data))}async fetchImageBitmapTile(e,t,r,n={}){const{signal:o}=n;if(this.fetchTile!==a.prototype.fetchTile){const a=await this.fetchTile(e,t,r,n);return(0,v.C)(a,e,t,r,o)}const l=this.getTileUrl(e,t,r)??"",s={responseType:"blob",signal:o,query:{...this.refreshParameters}},{data:u}=await(0,i.A)(l,s);return(0,v.C)(u,e,t,r,o)}getTileUrl(){throw new o.A("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,n._)([(0,u.MZ)({type:M.A})],A.prototype,"tileInfo",void 0),(0,n._)([(0,u.MZ)({type:["show","hide"]})],A.prototype,"listMode",void 0),(0,n._)([(0,u.MZ)({readOnly:!0,value:"base-tile"})],A.prototype,"type",void 0),(0,n._)([(0,u.MZ)({nonNullable:!0})],A.prototype,"fullExtent",void 0),(0,n._)([(0,u.MZ)()],A.prototype,"spatialReference",void 0),A=a=(0,n._)([(0,p.$)("esri.layers.BaseTileLayer")],A);const f=A;var _=r(4648),T=r(79083),S=r(1912);const U=new l.J({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let Z=class extends((0,h.dM)((0,_.q)((0,s.P)(f)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new M.A({size:[256,256],dpi:96,origin:new S.A({x:-20037508.342787,y:20037508.342787,spatialReference:d.A.WebMercator}),spatialReference:d.A.WebMercator,lods:[new T.A({level:1,resolution:78271.5169639999,scale:295828763.795777}),new T.A({level:2,resolution:39135.7584820001,scale:147914381.897889}),new T.A({level:3,resolution:19567.8792409999,scale:73957190.948944}),new T.A({level:4,resolution:9783.93962049996,scale:36978595.474472}),new T.A({level:5,resolution:4891.96981024998,scale:18489297.737236}),new T.A({level:6,resolution:2445.98490512499,scale:9244648.868618}),new T.A({level:7,resolution:1222.99245256249,scale:4622324.434309}),new T.A({level:8,resolution:611.49622628138,scale:2311162.217155}),new T.A({level:9,resolution:305.748113140558,scale:1155581.108577}),new T.A({level:10,resolution:152.874056570411,scale:577790.554289}),new T.A({level:11,resolution:76.4370282850732,scale:288895.277144}),new T.A({level:12,resolution:38.2185141425366,scale:144447.638572}),new T.A({level:13,resolution:19.1092570712683,scale:72223.819286}),new T.A({level:14,resolution:9.55462853563415,scale:36111.909643}),new T.A({level:15,resolution:4.77731426794937,scale:18055.954822}),new T.A({level:16,resolution:2.38865713397468,scale:9027.977411}),new T.A({level:17,resolution:1.19432856685505,scale:4513.988705}),new T.A({level:18,resolution:.597164283559817,scale:2256.994353}),new T.A({level:19,resolution:.298582141647617,scale:1128.497176}),new T.A({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return U.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new o.A("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,r){if(!this.loaded||null==this.bingMetadata)return null;const a=this.bingMetadata.resourceSets[0].resources[0],n=a.imageUrlSubdomains[t%a.imageUrlSubdomains.length],i=this._getQuadKey(e,t,r);return a.imageUrl.replace("{subdomain}",n).replace("{quadkey}",i)}async fetchAttributionData(){return this.load().then((()=>null==this.bingMetadata?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return(0,i.A)(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new o.A("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new o.A("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new o.A("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new o.A("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return(0,i.A)(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new o.A("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new o.A("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,r){let a="";for(let n=e;n>0;n--){let e=0;const i=1<<n-1;r&i&&(e+=1),t&i&&(e+=2),a+=e.toString()}return a}};(0,n._)([(0,u.MZ)({json:{read:!1,write:!1},value:null})],Z.prototype,"bingMetadata",null),(0,n._)([(0,u.MZ)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],Z.prototype,"type",void 0),(0,n._)([(0,u.MZ)({type:M.A})],Z.prototype,"tileInfo",void 0),(0,n._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:!1,write:!1}})],Z.prototype,"copyright",null),(0,n._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],Z.prototype,"key",void 0),(0,n._)([(0,u.MZ)({type:U.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:U.read}}})],Z.prototype,"style",void 0),(0,n._)([(0,u.MZ)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],Z.prototype,"operationalLayerType",null),(0,n._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],Z.prototype,"culture",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],Z.prototype,"region",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!0,read:!0}})],Z.prototype,"portalUrl",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!1,read:!1}})],Z.prototype,"hasAttributionData",void 0),(0,n._)([(0,u.MZ)({type:String,readOnly:!0})],Z.prototype,"bingLogo",null),Z=(0,n._)([(0,p.$)("esri.layers.BingMapsLayer")],Z);const x=Z},15089:function(e,t,r){r.d(t,{C:function(){return o},m:function(){return i}});var a=r(62991),n=r(37623);async function i(e,t,r){let i;try{i=await createImageBitmap(e)}catch(e){throw new a.A("request:server",`Unable to load ${t}`,{url:t,error:e})}return(0,n.Te)(r),i}async function o(e,t,r,i,o){let l;try{l=await createImageBitmap(e)}catch(e){throw new a.A("request:server",`Unable to load tile ${t}/${r}/${i}`,{error:e,level:t,row:r,col:i})}return(0,n.Te)(o),l}}}]);
//# sourceMappingURL=8050.2888687399ff10aa118d.js.map